module Linking

  LINKS = {
    # local tiddler links
    /(?<=^|[^@])\[\[([^\]\]\|]+)\]\](?=[^@]|$)/ => '[\1](/spaces/%{current_space}/t/\1)',
    /(?<=^|[^@])\[\[([^\|\]\]]+)\|([^\]\]]+)\]\](?=[^@]|$)/ => '[\1](/spaces/%{current_space}/t/\2)',

    # simple space links
    /(?<=^|[^\]\]\w_-])@([\w_-]+)(?=[^:\w_-]+|$)/ => '[\1](/s/\1)',
    /([\w_-]+)@([\w_-]+)(?=[^:\w_-]|$)/ => '[\1](/s/\2/\1)',
    /\[\[([^\]\]\|]+)\]\]@([\w_-]+)(?=[^:\w_-]|$)/ => '[\1](/s/\2/\1)',
    /\[\[([^\|\]\]]+)\|([^\]\]]+)\]\]@([\w_-]+)(?=[^:\w_-]|$)/ => '[\1](/s/\3/\2)',

    # complex space links (i.e. spaces within square brackets)
    /(?<=^|[^\]\]\w_-])@\[\[([^\]\]\|:]+)\]\]/ => '[\1](/s/\1)',
    /(?<=^|[^\]\]\w_-])@\[\[([^\|\]\]]+)\|([^\]\]\|:]+)\]\]/ => '[\1](/s/\2)',
    /([\w_-]+)@\[\[([^\]\]:]+)\]\]/ => '[\1](/s/\2/\1)',
    /\[\[([^\]\]\|]+)\]\]@\[\[([^\]\]:]+)\]\]/ => '[\1](/s/\2/\1)',
    /\[\[([^\|\]\]]+)\|([^\]\]]+)\]\]@\[\[([^\]\]:]+)\]\]/ => '[\1](/s/\3/\2)',

    # space owned by user links
    /(?<=^|[^\]\]\w_-])@([^:\[\[\]\]]+):([\w_-]+)/ => '[\2](/u/\1/\2)',
    /([\w_-]+)@([^:\[\[\]\]]+):([\w_-]+)/ => '[\1](/u/\2/\3/\1)',
    /\[\[([^\]\]\|]+)\]\]@([^:\[\[\]\]]+):([\w_-]+)/ => '[\1](/u/\2/\3/\1)',
    /\[\[([^\|\]\]]+)\|([^\]\]]+)\]\]@([^:\[\[\]\]]+):([\w_-]+)/ => '[\1 by \3](/s/\4/\2)',

    # complex space owned by user links (i.e. user:space within square brackets)
    /(?<=^|[^\]\]\w_-])@\[\[([^:\|\]\]]+):([^\]\]]+)\]\]/ => '[\2](/u/\1/\2)',
    /(?<=^|[^\]\]\w_-])@\[\[([^\|\]\]]+)\|([^:\]\]]+):([^\]\]\|]+)\]\]/ => '[\1](/u/\2/\3)',
    /([\w_-]+)@\[\[([^:\]\]]+):([^\]\]]+)\]\]/ => '[\1](/u/\2/\3/\1)',
    /\[\[([^\]\]\|]+)\]\]@\[\[([^:\]\]]+):([^\]\]]+)\]\]/ => '[\1](/u/\2/\3/\1)',
    /\[\[([^\|\]\]]+)\|([^\]\]]+)\]\]@\[\[([^:\]\]]+):([^\]\]]+)\]\]/ => '[\1](/u/\3/\4/\2)'
  }

  TRANSCLUSIONS = {
    /(?:\A|\n\n)\{\{\{([^\}\}\}<>]+)\}\}\}(?:\z|\\n\n)/ => '<div class="transclusion"><a href="/spaces/%{current_space}/t/\1">\1</a></div>',
    /(?:\A|\n\n)\{\{\{((?:<|>|[^\}\}\}])+)\}\}\}(?:\z|\\n\n)/ => '<div class="transclusion">\1</div>'
  }

  def each_match regex, str, &block
    matches = []
    str.gsub(regex) {|m| matches << $~ }
    matches.each &block
  end

end
